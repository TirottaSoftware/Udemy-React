{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristian\\\\Desktop\\\\Documents\\\\Coding\\\\Relearning React\\\\section-10\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const emailReducer = (state, action) => {\n    //Check actions here...\n    if (action.type == \"USER_INPUT\") {\n      return {\n        value: action.payload,\n        isValid: action.payload.includes('@') && enteredPassword.trim().length > 6\n      };\n    }\n\n    if (action.type == \"VALIDATE_EMAIL\") {\n      return {\n        value: state.value,\n        isValid: state.value.includes('@') && enteredPassword.trim().length > 6\n      };\n    }\n\n    return {\n      value: '',\n      isValid: false\n    };\n  };\n\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  }); // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log(\"Validating...\")\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return () => {\n  //     console.log(\"Cleanup\");\n  //     clearTimeout(identifier);\n  //   }\n  // }, [enteredEmail, enteredPassword])\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      payload: event.target.value\n    });\n    setFormIsValid(emailState.value.includes('@') && enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(event.target.value.trim().length > 6 && emailState.value.includes('@'));\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(emailState.value.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"cg26uewkemoTBban47NVYra+OVE=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Cristian/Desktop/Documents/Coding/Relearning React/section-10/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","Login","props","emailReducer","state","action","type","value","payload","isValid","includes","enteredPassword","trim","length","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","emailChangeHandler","event","setEnteredEmail","target","passwordChangeHandler","validateEmailHandler","setEmailIsValid","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst Login = (props) => {\n\n  const emailReducer = (state, action) =>{\n    //Check actions here...\n    if(action.type == \"USER_INPUT\"){\n      return {value: action.payload, isValid: action.payload.includes('@') && enteredPassword.trim().length > 6}\n    }\n    if(action.type == \"VALIDATE_EMAIL\"){\n      return {value: state.value, isValid: state.value.includes('@') && enteredPassword.trim().length > 6}\n    }\n    return {value: '', isValid: false}\n  }\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null,\n  })\n\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log(\"Validating...\")\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return () => {\n  //     console.log(\"Cleanup\");\n  //     clearTimeout(identifier);\n  //   }\n  // }, [enteredEmail, enteredPassword])\n\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n    dispatchEmail({type: \"USER_INPUT\", payload: event.target.value});\n    setFormIsValid(\n        emailState.value.includes('@') && enteredPassword.trim().length > 6\n      );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(\n      event.target.value.trim().length > 6 && emailState.value.includes('@')\n    );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(emailState.value.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}