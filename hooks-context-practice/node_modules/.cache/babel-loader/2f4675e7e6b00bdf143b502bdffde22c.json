{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristian\\\\Desktop\\\\Documents\\\\Coding\\\\Relearning React\\\\section-10\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const emailReducer = (state, action) => {\n    //Check actions here...\n    if (action.type == \"USER_INPUT\") {\n      return {\n        value: action.payload,\n        isValid: action.payload.includes('@')\n      };\n    }\n\n    if (action.type == \"VALIDATE_EMAIL\") {\n      return {\n        value: state.value,\n        isValid: state.value.includes('@')\n      };\n    }\n\n    return {\n      value: '',\n      isValid: false\n    };\n  }; // && enteredPassword\n\n\n  const passwordReducer = (state, action) => {\n    if (action.type == \"USER_INPUT\") {\n      return {\n        value: action.payload,\n        isValid: action.payload.trim().length > 6\n      };\n    }\n\n    if (action.type == \"VALIDATE_PASSWORD\") {\n      return {\n        value: state.value,\n        isValid: state.value.trim().length > 6\n      };\n    }\n\n    return {\n      value: '',\n      isValid: false\n    };\n  };\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Validating...\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log(\"Cleanup\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      payload: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      payload: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"VALIDATE_EMAIL\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"VALIDATE_PASSWORD\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Y5i/nd97Si0S6JEHPiVbsYlxEkI=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Cristian/Desktop/Documents/Coding/Relearning React/section-10/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","Login","props","emailReducer","state","action","type","value","payload","isValid","includes","passwordReducer","trim","length","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","identifier","setTimeout","console","log","emailIsValid","passwordIsValid","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst Login = (props) => {\n\n  const emailReducer = (state, action) =>{\n    //Check actions here...\n    if(action.type == \"USER_INPUT\"){\n      return {value: action.payload, isValid: action.payload.includes('@')}\n    }\n    if(action.type == \"VALIDATE_EMAIL\"){\n      return {value: state.value, isValid: state.value.includes('@')}\n    }\n    return {value: '', isValid: false}\n  }\n  // && enteredPassword\n  const passwordReducer = (state, action) =>{\n    if(action.type == \"USER_INPUT\"){\n      return {value: action.payload, isValid: action.payload.trim().length > 6}\n    }\n    if(action.type == \"VALIDATE_PASSWORD\"){\n      return {value: state.value, isValid: state.value.trim().length > 6}\n    }\n    return {value: '', isValid: false}\n  }\n\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null,\n  })\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  })\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Validating...\")\n      setFormIsValid(\n        emailIsValid && passwordIsValid\n      );\n    }, 500);\n    return () => {\n      console.log(\"Cleanup\");\n      clearTimeout(identifier);\n    }\n  }, [emailIsValid, passwordIsValid]);\n\n  const {isValid: emailIsValid} = emailState;\n  const {isValid: passwordIsValid} = passwordState;\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: \"USER_INPUT\", payload: event.target.value});\n    setFormIsValid(\n        emailState.isValid && passwordState.isValid\n      );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: \"USER_INPUT\", payload: event.target.value});\n\n    setFormIsValid(\n      emailState.isValid && passwordState.isValid\n    );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: \"VALIDATE_EMAIL\"});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type: \"VALIDATE_PASSWORD\"});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}